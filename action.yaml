name: Vogsphere Composite
description: Reusable Vogsphere workflow

inputs:
  normcheck:
    description: Run Norminette check
    required: false
    default: false

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        ref: main

    - name: Install Norminette
      if: ${{ inputs.normcheck == 'true' }}
      shell: bash
      run: |
        python3 -m pip install --upgrade pip setuptools >/dev/null 2>&1
        python3 -m pip install norminette >/dev/null 2>&1

    - name: Norminette
      if: ${{ inputs.normcheck == 'true' }}
      shell: bash
      run: |
        set +e
        output=$(norminette -RCheckForbiddenSourceHeader 2>&1)
        status=$?
        # Filter out lines that end with `: OK!`
        filtered_output=$(echo "$output" | grep -vE ': OK!$')

        # Check if there are actual errors (not just notices)
        if echo "$filtered_output" | grep -qE '^Error:'; then
          real_error=1
        else
          real_error=0
        fi

        # Print each line with appropriate color (red for errors, yellow for notices)
        while IFS= read -r line; do
          if [[ "$line" == Error:* ]]; then
            echo -e "\033[0;31m$line\033[0m"  # Red for errors
          elif [[ "$line" == Notice:* ]]; then
            echo -e "\033[0;33m$line\033[0m"  # Yellow for notices
          else
            echo -e "\033[0;31m$line\033[0m"
          fi
        done <<< "$filtered_output"

        # Only fail on actual errors, not notices
        if [ $real_error -ne 0 ]; then
          echo -e "\033[0;31mNorminette found errors that need to be fixed\033[0m"
          exit 1
        fi

        if [ $status -ne 0 ]; then
          echo -e "\033[0;33mNorminette exited with code $status but only contains notices (warnings)\033[0m"
        fi

    - name: Clear Vogsphere branch due to Norminette failure
      if: ${{ inputs.normcheck == 'true' && failure() }}
      shell: bash
      run: |
        git config user.name "github-actions[bot]" >/dev/null 2>&1
        git config user.email "github-actions[bot]@users.noreply.github.com" >/dev/null 2>&1
        git checkout --orphan vogsphere >/dev/null 2>&1
        git reset >/dev/null 2>&1
        git commit --allow-empty -m "NORMINETTE FAILED - BRANCH CLEARED" >/dev/null 2>&1
        git push origin vogsphere --force >/dev/null 2>&1
        exit 1

    - name: Create branch without history
      shell: bash
      run: |
        git checkout --orphan vogsphere >/dev/null 2>&1
        git reset >/dev/null 2>&1

    - name: Remove files and folders
      shell: bash
      run: |
        find . -name 'CMakeLists.txt' -type f -delete >/dev/null 2>&1
        find . -name '.gitignore' -type f -delete >/dev/null 2>&1
        find . -name 'README.md' -type f -delete >/dev/null 2>&1
        find . -name 'LICENSE' -type f -delete >/dev/null 2>&1
        find . -name '.github' -type d -exec rm -rf {} + >/dev/null 2>&1

    - name: Commit changes
      shell: bash
      run: |
        git config user.name "github-actions[bot]" >/dev/null 2>&1
        git config user.email "github-actions[bot]@users.noreply.github.com" >/dev/null 2>&1
        latest_commit_msg=$(git log main -1 --pretty=%s)
        git add . >/dev/null 2>&1
        git commit -m "\"$latest_commit_msg\" ready for Vogsphere" >/dev/null 2>&1

    - name: Push
      shell: bash
      run: |
        git push origin vogsphere --force >/dev/null 2>&1
